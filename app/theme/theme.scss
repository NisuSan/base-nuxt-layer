html {
  background-color: var(--color-background) !important;
  color: var(--color-text) !important;
}

@include themed('.n-button.n-button--tertiary-type', 'light') {
  .n-button__border {
    border: 1px solid var(--color-disabled-background) !important;
  }

  .n-button__state-border {
    border: none !important;
  }

  &:not(.n-button--disabled):hover {
    background: var(--color-disabled-background) !important;
    .n-button__state-border {
      border: none !important;
    }
  }
}

@include themed('.n-button.n-button--tertiary-type .n-button__border', 'dark') {
  border: 1px solid transparent !important;
}

.n-button.n-button--disabled {
  color: ch(var(--color-text), #fff);
}

.n-base-selection:not(.n-base-selection--disabled) .n-base-selection-label, .n-input:not(.n-input--disabled) {
  background-color: var(--color-input-background) !important;
}

.n-base-selection:not(.n-base-selection--disabled) .n-base-selection-placeholder, .n-input:not(.n-input--disabled) .n-input__placeholder {
  color: var(--color-placeholder);
}

@include themed('.n-card', 'light') {
  box-shadow: var(--shadow-harder) !important;
}

.n-collapse-item__header--active .n-collapse-item__header-main {
  font-weight: 500 !important;
  color: var(--color-main-brand) !important;
}

.n-base-selection.n-base-selection--disabled {
  border: none !important;

  * {
    border: none !important;
  }
}

.n-input .n-input__input-el, .n-input .n-input__textarea-el {
  caret-color: var(--color-text);
  color: ch(var(--color-text), var(--color-card-text));
}

.n-input .n-input__border, .n-input .n-input__state-border {
  border: 1px solid var(--color-border);
}

.n-input:not(.n-input--disabled).n-input--focus .n-input__state-border {
  border: 1px solid var(--color-main-brand);
}

.n-input:not(.n-input--disabled):hover .n-input__state-border {
  border: 1px solid var(--color-main-brand);
}

.n-tabs .n-tabs-tab {
  color: var(--color-text);
}

.n-tabs .n-tabs-nav.n-tabs-nav--line-type.n-tabs-nav--top .n-tabs-nav-scroll-content {
  border-bottom: 1px solid var(--color-border);
}

$buttons: ('default': 'main-brand', 'primary': 'main-brand', 'info': 'info', 'success': 'success', 'warning': 'warning', 'error': 'danger');
@each $t in ('light', 'dark') {
  @each $btn, $n in $buttons {
    [theme="#{$t}"] .n-button.n-button--#{$btn}-type.n-button--dashed:active {
      color: var(--color-#{$n}-hover) !important;
      background-color: var(--color-translucent) !important;

      .n-button__state-border {
        border-width: 1px !important;
      }
    }
  }
}

@include createTippyTheme('error', var(--color-danger), var(--color-text));

span[class^="icon-"] {
  position: relative;
  left: 0.5px;
  top: 1px;
  width: 1.3em !important;
  height: 1.3em !important;
}

[theme='light'] .icon-light {
  color: var(--color-text) !important;
}

[theme='dark'] .icon-dark {
  color: var(--color-text) !important;
}
