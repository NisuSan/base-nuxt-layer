@use "sass:map";
@use "sass:string";

@function str-split($string, $separator) {
  $i: string.index($string, $separator);
  @if $i != null {
    @return append(
      string.slice($string, 1, $i - 1),
      string.split(string.slice($string, $i + string.length($separator)), $separator)
    );
  }
  @return $string;
}

@function ch($light, $dark) {
  @return if(var(--current-theme) == 'light', $light, $dark);
}

@mixin themed($selector: '', $theme: null) {
  @each $s in string.split($selector, ',') {
    [theme=#{$theme}] #{$s} {
      @content;
    }
  }
}

@mixin createTippyTheme($theme, $bgColor, $textColor) {
  .tippy-box[data-theme~='#{$theme}'] {
    @apply font-medium;
    background-color: $bgColor;
    color: $textColor;
  }

  .tippy-box[data-theme~='#{$theme}'][data-placement^='top'] > .tippy-arrow::before {
    border-top-color: $bgColor;
  }

  .tippy-box[data-theme~='#{$theme}'][data-placement^='bottom'] > .tippy-arrow::before {
    border-bottom-color: $bgColor;
  }

  .tippy-box[data-theme~='#{$theme}'][data-placement^='left'] > .tippy-arrow::before {
    border-left-color: $bgColor;
  }

  .tippy-box[data-theme~='#{$theme}'][data-placement^='right'] > .tippy-arrow::before {
    border-right-color: $bgColor;
  }
}
